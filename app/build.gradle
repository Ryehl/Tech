apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {

    signingConfigs { //在android代码块下写
        debug {//这个地方可以写成 release
            storeFile file('tech.keystore')
            keyAlias "tech"
            storePassword "123456"
            keyPassword "123456"
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.wd.tech"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //极光IM
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "d4cf77f0d3b85e9edc540dee", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
        androidTest {
            java.srcDirs = ['src/androidTest/java/']
        }
        test {
            java.srcDirs = ['src/test/java/']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Gson依赖
    implementation 'com.google.code.gson:gson:2.4'
    //fresco
    implementation 'com.facebook.fresco:fresco:0.14.1'
    //二维码
    implementation 'cn.yipianfengye.android:zxing-library:2.1'
    //recyclerview
    implementation 'androidx.recyclerview:recyclerview:latest.release'
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    //日志拦截器
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    //eventbus
    implementation 'org.greenrobot:eventbus:3.0.0'
    //Retrofit结合RxJava的依赖
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.android.support:design:30.0.0'
    //my library
    implementation project(path: ':mylibrary')
    //MMKV
    implementation 'com.tencent:mmkv-static:1.0.23'
    //XBanner
    implementation 'com.github.xiaohaibin:XBanner:1.7.3'
    //极光IM消息
    implementation 'cn.jiguang.sdk:jmessage:2.9.2'  // 此处以JMessage 2.9.2 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.3.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'//glide依赖
    //XRecyclerview
    implementation 'com.jcodecraeer:xrecyclerview:1.6.0'
    implementation 'com.zhangzheng.superxml:library:1.1.0'
    //图片选择器
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.8'
    //material 库
    implementation 'com.google.android.material:material:1.0.0'
    //微信登陆
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    //左滑删除
    implementation 'com.yanzhenjie:recyclerview-swipe:1.1.4'
    implementation 'cn.jiguang.sdk:jmrtc:1.0.2'  // 此处以jmrtc 1.0.2 版本为例
}
